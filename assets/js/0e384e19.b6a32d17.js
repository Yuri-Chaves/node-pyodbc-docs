"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[976],{2053:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"intro","title":"Introduction","description":"Node-pyODBC is a Node.js module that allows you to connect to databases using the ODBC protocol. With this module, you can connect to databases such as MySQL, PostgreSQL, SQL Server, Oracle, and more.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/node-pyodbc-docs/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"intro","title":"Introduction","sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Client","permalink":"/node-pyodbc-docs/docs/category/client"}}');var i=s(4848),o=s(8453);const r={id:"intro",title:"Introduction",sidebar_position:1},d="What is Node-pyODBC?",l={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"what-is-node-pyodbc",children:"What is Node-pyODBC?"})}),"\n",(0,i.jsx)(n.p,{children:"Node-pyODBC is a Node.js module that allows you to connect to databases using the ODBC protocol. With this module, you can connect to databases such as MySQL, PostgreSQL, SQL Server, Oracle, and more."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/IBM/node-odbc",children:"node-odbc"})," library had some issues with encoding and special characters(such as ",(0,i.jsx)(n.code,{children:"\xe7"}),", ",(0,i.jsx)(n.code,{children:"\xe3"}),", ",(0,i.jsx)(n.code,{children:"\xe9"}),", etc.), which made it difficult to use in some cases. I spend a lot of time trying to solve this problem, but I couldn't find a solution that worked for everyone. So, I decided to create a new library that would handle encoding and special characters better."]}),"\n",(0,i.jsxs)(n.p,{children:["This library solves this issue transparently, taking advantage of the robustness of ",(0,i.jsx)(n.a,{href:"https://github.com/mkleehammer/pyodbc",children:"pyodbc"})," and the fluidity of modern NodeJS."]}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["unixODBC binaries and development libraries for module compilation","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["on ",(0,i.jsx)(n.strong,{children:"Ubuntu/Debian"})," ",(0,i.jsx)(n.code,{children:"sudo apt-get install unixodbc unixodbc-dev"})]}),"\n",(0,i.jsxs)(n.li,{children:["on ",(0,i.jsx)(n.strong,{children:"RedHat/CentOS"})," ",(0,i.jsx)(n.code,{children:"sudo yum install unixODBC unixODBC-devel"})]}),"\n",(0,i.jsxs)(n.li,{children:["on ",(0,i.jsx)(n.strong,{children:"OSX"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["using ",(0,i.jsx)(n.em,{children:"macports.org"})," ",(0,i.jsx)(n.code,{children:"sudo port unixODBC"})]}),"\n",(0,i.jsxs)(n.li,{children:["using ",(0,i.jsx)(n.em,{children:"brew"})," ",(0,i.jsx)(n.code,{children:"brew install unixODBC"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["on ",(0,i.jsx)(n.strong,{children:"FreeBSD"})," ",(0,i.jsx)(n.code,{children:"from ports cd /usr/ports/databases/unixODBC; make install"})]}),"\n",(0,i.jsxs)(n.li,{children:["on ",(0,i.jsx)(n.strong,{children:"IBM i"})," ",(0,i.jsx)(n.code,{children:"yum install unixODBC unixODBC-devel"})," (requires ",(0,i.jsx)(n.a,{href:"https://ibmi-oss-docs.readthedocs.io/en/latest/yum/README.html",children:"yum"}),")"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"ODBC drivers for target database"}),"\n",(0,i.jsx)(n.li,{children:"properly configured odbc.ini and odbcinst.ini."}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.python.org/",children:"python 3.X.X"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/mkleehammer/pyodbc",children:"pyodbc"})}),"\n",(0,i.jsx)(n.li,{children:"Node.js >=18.20.4"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"The library is currently under development; you can install the experimental version using the following command."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install node-pyodbc@git+https://github.com/Yuri-Chaves/node-pyodbc/tree/main\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);