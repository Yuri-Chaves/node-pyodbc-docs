"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[715],{862:(e,n,s)=>{s.d(n,{Mb:()=>l,Tr:()=>a,ap:()=>o,k7:()=>i,lI:()=>r});var t=s(1312),d=s(4848);const i=({children:e})=>(0,d.jsxs)("span",{children:[(0,d.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,d.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),r=({children:e})=>(0,d.jsxs)("span",{children:[(0,d.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),l=({children:e})=>(0,d.jsx)("span",{style:{color:"#8ae9fd"},children:e}),a=({children:e})=>(0,d.jsxs)("span",{children:[e,(0,d.jsx)("span",{className:"required-indicator",children:(0,d.jsx)(t.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),o=({children:e})=>(0,d.jsx)("span",{className:"highlight",children:e})},3372:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"dml/insertMultiple","title":"Insert Multiple","description":"The insertMultiple function allows you to execute an INSERT statement and return an object containing the status of the operation, a message and some details.","source":"@site/docs/dml/insertMultiple.mdx","sourceDirName":"dml","slug":"/dml/insertMultiple","permalink":"/node-pyodbc-docs/docs/dml/insertMultiple","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"id":"insertMultiple"},"sidebar":"tutorialSidebar","previous":{"title":"AVG","permalink":"/node-pyodbc-docs/docs/dml/aggregate/avg"},"next":{"title":"Joining Tables","permalink":"/node-pyodbc-docs/docs/dml/join"}}');var d=s(4848),i=s(8453),r=s(862);const l={sidebar_position:6,id:"insertMultiple"},a="Insert Multiple",o={},c=[{value:"Example",id:"example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"database",id:"database",level:3},{value:"<RequiredIndicator>table</RequiredIndicator>",id:"table",level:3},{value:"<RequiredIndicator>data</RequiredIndicator>",id:"data",level:3},{value:"replace",id:"replace",level:3},{value:"model",id:"model",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"insert-multiple",children:"Insert Multiple"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"insertMultiple"})," function allows you to execute an INSERT statement and return an object containing the status of the operation, a message and some details."]}),"\n",(0,d.jsx)(n.p,{children:"The function accepts the main table type"}),"\n",(0,d.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'import { odbc } from "./odbc";\nimport { TUsers } from "./types";\n\nconst insert = await odbc.insertMultiple<TUsers>({\n  table: "users",\n  data: [\n    {\n      name: "Mr. Nobody",\n      email: "mr.nobody@gmail.com",\n      age: 65,\n    },\n    {\n      name: "Ms. Nobody",\n      email: "ms.nobody@gmail.com",\n      age: 63,\n    },\n  ],\n  model: "UNION_ALL",\n});\n\nconsole.log(insert);\n/*\n{\n  code: SUCCESS,\n  message: "Successfully executed query: INSERT INTO users(name, email, age) SELECT \'Mr. Nobody\', \'mr.nobody@gmail.com\', 65 UNION ALL SELECT \'Ms. Nobody\', \'ms.nobody@gmail.com\', 63;",\n  details: "2 row(s) affected",\n}\n*/\n'})}),"\n",(0,d.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsx)(n.h3,{id:"database",children:"database"}),"\n",(0,d.jsx)(n.p,{children:"The name of the database to be used. If you have set the same database in the explicit config object, you can omit this parameter."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"Client database"})]})})]}),"\n",(0,d.jsx)(n.h3,{id:"table",children:(0,d.jsx)(r.Tr,{children:"table"})}),"\n",(0,d.jsx)(n.p,{children:"The name of the table to be inserted."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.td,{children:"string"})})})]}),"\n",(0,d.jsx)(n.h3,{id:"data",children:(0,d.jsx)(r.Tr,{children:"data"})}),"\n",(0,d.jsx)(n.p,{children:"The data to be inserted. If a type is provided, IntelliSense will provide suggestions with the column names."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.td,{children:(0,d.jsx)(r.lI,{children:"Object"})})})})]}),"\n",(0,d.jsx)(n.h3,{id:"replace",children:"replace"}),"\n",(0,d.jsx)(n.p,{children:"A boolean value that indicates whether the existing data in the table should be replaced."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"boolean"}),(0,d.jsx)(n.td,{children:"false"})]})})]}),"\n",(0,d.jsx)(n.h3,{id:"model",children:"model"}),"\n",(0,d.jsx)(n.p,{children:"The model to be used when inserting multiple rows."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"MULTIPLE_VALUES | SELECT_FROM | UNION_ALL"}),(0,d.jsx)(n.td,{children:"MULTIPLE_VALUES"})]})})]}),"\n",(0,d.jsx)(n.admonition,{title:"model",type:"warning",children:(0,d.jsxs)(n.p,{children:["Make sure your ",(0,d.jsx)(n.a,{href:"https://www.geeksforgeeks.org/introduction-of-dbms-database-management-system-set-1/",children:"DBMS"})," accepts the syntax."]})}),"\n",(0,d.jsxs)(n.admonition,{title:"MULTIPLE_VALUES",type:"info",children:[(0,d.jsxs)(n.p,{children:["SQL Server 2008 and later based. ",(0,d.jsx)(n.strong,{children:"limited"})," to ",(0,d.jsx)(r.ap,{children:"1000 records"})]}),(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sql",children:"INSERT INTO users(name, email, age)\nVALUES\n  ('Mr. Nobody', 'mr.nobody@gmail.com', 65),\n  ('Ms. Nobody', 'ms.nobody@gmail.com', 63);\n"})})]}),"\n",(0,d.jsxs)(n.admonition,{title:"SELECT_FROM",type:"info",children:[(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"MULTIPLE_VALUES"})," ",(0,d.jsx)(n.em,{children:"workaround"})," for more than ",(0,d.jsx)(r.ap,{children:"1000 records"})]}),(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sql",children:"INSERT INTO users(name, email, age)\nSELECT\n  V.name,\n  V.email,\n  V.age\nFROM (\n  VALUES\n    ('Mr. Nobody', 'mr.nobody@gmail.com', 65),\n    ('Ms. Nobody', 'ms.nobody@gmail.com', 63)\n) AS V (name, email, age);\n"})})]}),"\n",(0,d.jsxs)(n.admonition,{title:"UNION_ALL",type:"info",children:[(0,d.jsx)(n.p,{children:"SQL Server 2005 and later based"}),(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sql",children:"INSERT INTO users(name, email, age)\nSELECT 'Mr. Nobody', 'mr.nobody@gmail.com', 65\nUNION ALL\nSELECT 'Ms. Nobody', 'ms.nobody@gmail.com', 63;\n"})})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const d={},i=t.createContext(d);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);