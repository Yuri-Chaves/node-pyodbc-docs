"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[391],{862:(e,n,r)=>{r.d(n,{Mb:()=>c,Tr:()=>i,ap:()=>d,k7:()=>s,lI:()=>a});var t=r(1312),o=r(4848);const s=({children:e})=>(0,o.jsxs)("span",{children:[(0,o.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,o.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),a=({children:e})=>(0,o.jsxs)("span",{children:[(0,o.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),c=({children:e})=>(0,o.jsx)("span",{style:{color:"#8ae9fd"},children:e}),i=({children:e})=>(0,o.jsxs)("span",{children:[e,(0,o.jsx)("span",{className:"required-indicator",children:(0,o.jsx)(t.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),d=({children:e})=>(0,o.jsx)("span",{className:"highlight",children:e})},5926:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"dml/aggregate/count","title":"COUNT","description":"Returns the number of rows in a set","source":"@site/docs/dml/aggregate/count.mdx","sourceDirName":"dml/aggregate","slug":"/dml/aggregate/count","permalink":"/node-pyodbc-docs/docs/dml/aggregate/count","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"id":"count"},"sidebar":"tutorialSidebar","previous":{"title":"MAX","permalink":"/node-pyodbc-docs/docs/dml/aggregate/max"},"next":{"title":"SUM","permalink":"/node-pyodbc-docs/docs/dml/aggregate/sum"}}');var o=r(4848),s=r(8453);r(862);const a={sidebar_position:3,id:"count"},c="COUNT",i={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"count",children:"COUNT"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the number of rows in a set"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { odbc } from "./odbc";\nimport { TUsers } from "./types";\n\nconst count = await odbc.aggregate<TUsers, Array<TUsers>>({\n  fn: "COUNT",\n  column: "*",\n  table: "users",\n  distinct: true,\n});\n\nconsole.log(count);\n/*\n{\n  id: 1,\n  name: "Yuri Chaves",\n  email: "yuri.chaves39@hotmail.com",\n  age: 29\n},\n{\n  id: 2,\n  name: "John Doe",\n  email: "john.doe@gmail.com",\n  age: 30\n},\n{\n  id: 3,\n  name: "Jane Doe",\n  email: "jane.doe@gmail.com",\n  age: 31\n}\n*/\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(6540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);