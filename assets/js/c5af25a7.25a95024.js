"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[265],{862:(e,n,s)=>{s.d(n,{Mb:()=>t,Tr:()=>o,ap:()=>c,k7:()=>r,lI:()=>l});var i=s(1312),d=s(4848);const r=({children:e})=>(0,d.jsxs)("span",{children:[(0,d.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,d.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),l=({children:e})=>(0,d.jsxs)("span",{children:[(0,d.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),t=({children:e})=>(0,d.jsx)("span",{style:{color:"#8ae9fd"},children:e}),o=({children:e})=>(0,d.jsxs)("span",{children:[e,(0,d.jsx)("span",{className:"required-indicator",children:(0,d.jsx)(i.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),c=({children:e})=>(0,d.jsx)("span",{className:"highlight",children:e})},2295:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>j,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"dml/on","title":"ON Clause","description":"Defines the join condition between the tables, specifying how the records from one table should relate to those from another.","source":"@site/docs/dml/on.mdx","sourceDirName":"dml","slug":"/dml/on","permalink":"/node-pyodbc-docs/docs/dml/on","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"id":"on"},"sidebar":"tutorialSidebar","previous":{"title":"Joining Tables","permalink":"/node-pyodbc-docs/docs/dml/join"}}');var d=s(4848),r=s(8453),l=s(862);const t={sidebar_position:8,id:"on"},o="ON Clause",c={},a=[{value:"Types",id:"types",level:2},{value:"TClauses",id:"tclauses",level:3},{value:"TJoinConditions",id:"tjoinconditions",level:3},{value:"TJoinOn",id:"tjoinon",level:3},{value:"Examples",id:"examples",level:2},{value:"Using <TypeKey>TJoinConditions</TypeKey>",id:"using-tjoinconditions",level:3},{value:"Using [<TypeKey>TClauses</TypeKey>, <ArrayKey><TypeKey>TJoinConditions</TypeKey></ArrayKey>]",id:"using-tclauses-tjoinconditions",level:3},{value:"Using [<TypeKey>TClauses</TypeKey>, <ArrayKey><TypeKey>TJoinOn</TypeKey></ArrayKey>]",id:"using-tclauses-tjoinon",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"on-clause",children:"ON Clause"})}),"\n",(0,d.jsx)(n.p,{children:"Defines the join condition between the tables, specifying how the records from one table should relate to those from another."}),"\n",(0,d.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,d.jsx)(n.h3,{id:"tclauses",children:"TClauses"}),"\n",(0,d.jsx)(n.p,{children:"Literal type used to indicate how the conditions should be met."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type"})})}),(0,d.jsx)(n.tbody,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.td,{children:'"AND" | "OR"'})})})]}),"\n",(0,d.jsx)(n.h3,{id:"tjoinconditions",children:"TJoinConditions"}),"\n",(0,d.jsx)(n.p,{children:"Object type that represents the join conditions."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"columnA"}),(0,d.jsxs)(n.td,{children:["string | ",(0,d.jsx)(l.k7,{children:"TableA"})]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"columnB"}),(0,d.jsxs)(n.td,{children:["string | ",(0,d.jsx)(l.k7,{children:"TableB"})]}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"operator"}),(0,d.jsx)(n.td,{children:'"=" | "<>" | ">" | ">=" | "<" | "<="'}),(0,d.jsx)(n.td,{children:'"="'})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"tjoinon",children:"TJoinOn"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.th,{children:"Type"})})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsx)(n.tr,{children:(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#tjoinconditions",children:(0,d.jsx)(l.Mb,{children:"TJoinConditions"})})})}),(0,d.jsx)(n.tr,{children:(0,d.jsxs)(n.td,{children:["[",(0,d.jsx)(n.a,{href:"#tclauses",children:(0,d.jsx)(l.Mb,{children:"TClauses"})}),", ",(0,d.jsx)(l.lI,{children:(0,d.jsx)(n.a,{href:"#tjoinconditions",children:(0,d.jsx)(l.Mb,{children:"TJoinConditions"})})}),"]"]})}),(0,d.jsx)(n.tr,{children:(0,d.jsxs)(n.td,{children:["[",(0,d.jsx)(n.a,{href:"#tclauses",children:(0,d.jsx)(l.Mb,{children:"TClauses"})}),", ",(0,d.jsx)(l.lI,{children:(0,d.jsx)(n.a,{href:"#tjoinon",children:(0,d.jsx)(l.Mb,{children:"TJoinOn"})})}),"]"]})})]})]}),"\n",(0,d.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,d.jsxs)(n.h3,{id:"using-tjoinconditions",children:["Using ",(0,d.jsx)(l.Mb,{children:"TJoinConditions"})]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"users.id = addresses.user_id"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'const data = await odbc.select<TableA, TableB, Data>({\n  // ...\n  join: {\n    // ...\n    on: {\n      columnA: "id",\n      columnB: "user_id",\n    },\n  },\n});\n'})}),"\n",(0,d.jsxs)(n.h3,{id:"using-tclauses-tjoinconditions",children:["Using [",(0,d.jsx)(l.Mb,{children:"TClauses"}),", ",(0,d.jsx)(l.lI,{children:(0,d.jsx)(l.Mb,{children:"TJoinConditions"})}),"]"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"(users.id <> addresses.user_id) AND (users.id > addresses.user_id)"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'const data = await odbc.select<TableA, TableB, Data>({\n  // ...\n  join: {\n    // ...\n    on: [\n      "AND",\n      [\n        {\n          columnA: "id",\n          columnB: "user_id",\n          operator: "<>",\n        },\n        {\n          columnA: "id",\n          columnB: "user_id",\n          operator: ">",\n        },\n      ],\n    ],\n  },\n});\n'})}),"\n",(0,d.jsxs)(n.h3,{id:"using-tclauses-tjoinon",children:["Using [",(0,d.jsx)(l.Mb,{children:"TClauses"}),", ",(0,d.jsx)(l.lI,{children:(0,d.jsx)(l.Mb,{children:"TJoinOn"})}),"]"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"(((users.id <> addresses.user_id) AND (users.id > addresses.user_id)) OR (users.id = addresses.user_id))"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'const data = await odbc.select<TableA, TableB, Data>({\n  // ...\n  join: {\n    // ...\n    on: [\n      "OR",\n      [\n        [\n          "AND",\n          [\n            {\n              columnA: "id",\n              columnB: "user_id",\n              operator: "<>",\n            },\n            {\n              columnA: "id",\n              columnB: "user_id",\n              operator: ">",\n            },\n          ],\n        ],\n        {\n          columnA: "id",\n          columnB: "user_id",\n        },\n      ],\n    ],\n  },\n});\n'})})]})}function j(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(6540);const d={},r=i.createContext(d);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);