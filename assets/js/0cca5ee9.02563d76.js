"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[676],{862:(e,t,n)=>{n.d(t,{Mb:()=>i,Tr:()=>l,ap:()=>c,k7:()=>s,lI:()=>r});var d=n(1312),a=n(4848);const s=({children:e})=>(0,a.jsxs)("span",{children:[(0,a.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,a.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),r=({children:e})=>(0,a.jsxs)("span",{children:[(0,a.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),i=({children:e})=>(0,a.jsx)("span",{style:{color:"#8ae9fd"},children:e}),l=({children:e})=>(0,a.jsxs)("span",{children:[e,(0,a.jsx)("span",{className:"required-indicator",children:(0,a.jsx)(d.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),c=({children:e})=>(0,a.jsx)("span",{className:"highlight",children:e})},3495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"dml/update","title":"Update","description":"the update function allows you to execute an UPDATE statement and return an object containing the status of the operation, a message and some details.","source":"@site/docs/dml/update.mdx","sourceDirName":"dml","slug":"/dml/update","permalink":"/node-pyodbc-docs/docs/dml/update","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"id":"update"},"sidebar":"tutorialSidebar","previous":{"title":"Delete","permalink":"/node-pyodbc-docs/docs/dml/delete"},"next":{"title":"Aggregate Functions","permalink":"/node-pyodbc-docs/docs/dml/aggregate/"}}');var a=n(4848),s=n(8453),r=n(862);const i={sidebar_position:4,id:"update"},l="Update",c={},o=[{value:"Example",id:"example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"database",id:"database",level:3},{value:"<RequiredIndicator>table</RequiredIndicator>",id:"table",level:3},{value:"<RequiredIndicator>data</RequiredIndicator>",id:"data",level:3},{value:"where",id:"where",level:3}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"update",children:"Update"})}),"\n",(0,a.jsx)(t.p,{children:"the update function allows you to execute an UPDATE statement and return an object containing the status of the operation, a message and some details."}),"\n",(0,a.jsx)(t.p,{children:"The function accepts the main table type"}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'import { odbc } from "./odbc";\nimport { TUsers } from "./types";\n\nconst update = await odbc.update<TUsers>({\n  table: "users",\n  data: {\n    name: "William Nobody",\n  },\n  where: "name = \'Billy Nobody\'",\n});\n\nconsole.log(update);\n/*\n{\n  code: SUCCESS,\n  message: "Successfully executed query: UPDATE users SET name = \'William Nobody\' WHERE name = \'Billy Nobody\';",\n  details: "1  row(s) affected",\n}\n*/\n'})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"database",children:"database"}),"\n",(0,a.jsx)(t.p,{children:"The name of the database to be used. If you have set the same database in the explicit config object, you can omit this parameter."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Default"})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"string"}),(0,a.jsx)(t.td,{children:"Client database"})]})})]}),"\n",(0,a.jsx)(t.h3,{id:"table",children:(0,a.jsx)(r.Tr,{children:"table"})}),"\n",(0,a.jsx)(t.p,{children:"The name of the table to be updated."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsx)(t.tr,{children:(0,a.jsx)(t.th,{children:"Type"})})}),(0,a.jsx)(t.tbody,{children:(0,a.jsx)(t.tr,{children:(0,a.jsx)(t.td,{children:"string"})})})]}),"\n",(0,a.jsx)(t.h3,{id:"data",children:(0,a.jsx)(r.Tr,{children:"data"})}),"\n",(0,a.jsx)(t.p,{children:"The data to be updated. If a type is provided, IntelliSense will provide suggestions with the column names."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsx)(t.tr,{children:(0,a.jsx)(t.th,{children:"Type"})})}),(0,a.jsx)(t.tbody,{children:(0,a.jsx)(t.tr,{children:(0,a.jsx)(t.td,{children:(0,a.jsx)(r.Mb,{children:"Object"})})})})]}),"\n",(0,a.jsx)(t.h3,{id:"where",children:"where"}),"\n",(0,a.jsx)(t.p,{children:"A string that represents the WHERE clause."}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsx)(t.tr,{children:(0,a.jsx)(t.th,{children:"Type"})})}),(0,a.jsx)(t.tbody,{children:(0,a.jsx)(t.tr,{children:(0,a.jsx)(t.td,{children:"string"})})})]}),"\n",(0,a.jsx)(t.admonition,{title:"Caution",type:"warning",children:(0,a.jsxs)(t.p,{children:["Updates without a ",(0,a.jsx)(r.ap,{children:"WHERE"})," clause will affect ",(0,a.jsx)(t.strong,{children:"ALL"})," rows in the table."]})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var d=n(6540);const a={},s=d.createContext(a);function r(e){const t=d.useContext(s);return d.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),d.createElement(s.Provider,{value:t},e.children)}}}]);