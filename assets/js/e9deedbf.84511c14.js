"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[951],{862:(e,n,s)=>{s.d(n,{Mb:()=>c,Tr:()=>d,ap:()=>i,k7:()=>o,lI:()=>a});var t=s(1312),r=s(4848);const o=({children:e})=>(0,r.jsxs)("span",{children:[(0,r.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,r.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),a=({children:e})=>(0,r.jsxs)("span",{children:[(0,r.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),c=({children:e})=>(0,r.jsx)("span",{style:{color:"#8ae9fd"},children:e}),d=({children:e})=>(0,r.jsxs)("span",{children:[e,(0,r.jsx)("span",{className:"required-indicator",children:(0,r.jsx)(t.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),i=({children:e})=>(0,r.jsx)("span",{className:"highlight",children:e})},6580:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"dml/aggregate/sum","title":"SUM","description":"Returns the total sum of a numerical column","source":"@site/docs/dml/aggregate/sum.mdx","sourceDirName":"dml/aggregate","slug":"/dml/aggregate/sum","permalink":"/node-pyodbc-docs/docs/dml/aggregate/sum","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"id":"sum"},"sidebar":"tutorialSidebar","previous":{"title":"COUNT","permalink":"/node-pyodbc-docs/docs/dml/aggregate/count"},"next":{"title":"AVG","permalink":"/node-pyodbc-docs/docs/dml/aggregate/avg"}}');var r=s(4848),o=s(8453);s(862);const a={sidebar_position:4,id:"sum"},c="SUM",d={},i=[];function l(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"sum",children:"SUM"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the total sum of a numerical column"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { odbc } from "./odbc";\nimport { TUsers } from "./types";\n\nconst sum = await odbc.aggregate<TUsers, { total: number }>({\n  fn: "SUM",\n  column: "age",\n  table: "users",\n  alias: "total",\n  expression: "* 2", // Multiply 2 times each value\n});\n\nconsole.log(sum);\n/*\n{\n  total: 180\n}\n*/\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(6540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);