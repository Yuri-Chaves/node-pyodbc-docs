"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[937],{862:(e,n,t)=>{t.d(n,{Mb:()=>d,Tr:()=>a,ap:()=>c,k7:()=>i,lI:()=>l});var s=t(1312),r=t(4848);const i=({children:e})=>(0,r.jsxs)("span",{children:[(0,r.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,r.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),l=({children:e})=>(0,r.jsxs)("span",{children:[(0,r.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),d=({children:e})=>(0,r.jsx)("span",{style:{color:"#8ae9fd"},children:e}),a=({children:e})=>(0,r.jsxs)("span",{children:[e,(0,r.jsx)("span",{className:"required-indicator",children:(0,r.jsx)(s.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),c=({children:e})=>(0,r.jsx)("span",{className:"highlight",children:e})},3713:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>j,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"dml/select","title":"Select","description":"The select function allows you to execute a SELECT statement and return an object or an array of objects containing the selected data.","source":"@site/docs/dml/select.mdx","sourceDirName":"dml","slug":"/dml/select","permalink":"/node-pyodbc-docs/docs/dml/select","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"select"},"sidebar":"tutorialSidebar","previous":{"title":"DML","permalink":"/node-pyodbc-docs/docs/category/dml"},"next":{"title":"Insert","permalink":"/node-pyodbc-docs/docs/dml/insert"}}');var r=t(4848),i=t(8453),l=t(862);const d={sidebar_position:1,id:"select"},a="Select",c={},o=[{value:"Example",id:"example",level:2},{value:"Parameters",id:"parameters",level:2},{value:"<RequiredIndicator>columns</RequiredIndicator>",id:"columns",level:3},{value:"database",id:"database",level:3},{value:"<RequiredIndicator>table</RequiredIndicator>",id:"table",level:3},{value:"join",id:"join",level:3},{value:"where",id:"where",level:3},{value:"options",id:"options",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"select",children:"Select"})}),"\n",(0,r.jsx)(n.p,{children:"The select function allows you to execute a SELECT statement and return an object or an array of objects containing the selected data."}),"\n",(0,r.jsx)(n.p,{children:"The function accepts three types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TableA"}),": Main table type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TableB"}),": Join table type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data"}),": Result type"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { odbc } from "./odbc";\nimport { TUsers, TAddresses } from "./types";\n\ntype TableA = TUsers;\ntype TableB = TAddresses;\n\ntype Data = Array<Pick<TableA, "name"> & Pick<TableB, "city" | "state">>;\n\nconst data = await odbc.select<TableA, TableB, Data>({\n  columns: ["name"],\n  database: "users",\n  table: "users",\n  join: {\n    table: "addresses",\n    columns: ["city", "state"],\n    on: {\n      columnA: "id",\n      columnB: "user_id",\n    },\n    type: "INNER",\n  },\n  options: {\n    limit: 10,\n    offset: 0,\n    order: {\n      columns: ["users.name"],\n      direction: "ASC",\n    },\n  },\n  where: "users.age >= 30",\n});\n\nconsole.log(data);\n/*\n[\n {\n   "name": "Jane Doe",\n   "city": "S\xe3o Paulo",\n   "state": "SP"\n },\n {\n   "name": "John Doe",\n   "city": "Rio de Janeiro",\n   "state": "RJ"\n }\n]\n*/\n'})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"columns",children:(0,r.jsx)(l.Tr,{children:"columns"})}),"\n",(0,r.jsxs)(n.p,{children:["An array of strings that represent the columns to be selected. If a type ",(0,r.jsx)(n.code,{children:"TableA"})," is provided, IntelliSense will provide suggestions with the column names."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{children:"Type"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsxs)(n.td,{children:["string | ",(0,r.jsx)(l.lI,{children:(0,r.jsx)(l.k7,{children:"TableA"})})]})})})]}),"\n",(0,r.jsxs)(n.admonition,{title:"Select all columns",type:"info",children:[(0,r.jsx)(n.p,{children:"If you want to select all columns, you can use the asterisk (*) symbol."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const data = await odbc.select<TableA, TableB, Data>({\n  columns: "*",\n  // ...\n});\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"database",children:"database"}),"\n",(0,r.jsx)(n.p,{children:"The name of the database to be used. If you have set the same database in the explicit config object, you can omit this parameter."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Client database"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"table",children:(0,r.jsx)(l.Tr,{children:"table"})}),"\n",(0,r.jsx)(n.p,{children:"The name of the table to be selected."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{children:"Type"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{children:"string"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"join",children:"join"}),"\n",(0,r.jsxs)(n.p,{children:["An object that represents the join between two tables. Check the ",(0,r.jsx)(n.a,{href:"./join",children:"Joining Tables"})," section for more information."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{children:"Type"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{children:"object"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"where",children:"where"}),"\n",(0,r.jsx)(n.p,{children:"A string that represents the WHERE clause."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{children:"Type"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{children:"string"})})})]}),"\n",(0,r.jsx)(n.admonition,{title:"Using where with join",type:"warning",children:(0,r.jsxs)(n.p,{children:["If you use the where property when joining tables, you need to specify the table name in the where clause.\nExample: ",(0,r.jsx)(n.code,{children:"users.age >= 30"})," or ",(0,r.jsx)(n.code,{children:"addresses.city = 'S\xe3o Paulo'"})]})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,r.jsx)(n.p,{children:"An object containing the options for the SELECT statement."})]})}function j(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var s=t(6540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);