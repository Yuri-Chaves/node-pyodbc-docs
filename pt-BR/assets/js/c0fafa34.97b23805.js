"use strict";(self.webpackChunknode_pyodbc=self.webpackChunknode_pyodbc||[]).push([[79],{862:(e,n,s)=>{s.d(n,{Mb:()=>a,Tr:()=>o,ap:()=>l,k7:()=>d,lI:()=>i});var r=s(1312),t=s(4848);const d=({children:e})=>(0,t.jsxs)("span",{children:[(0,t.jsx)("span",{style:{color:"#ff79c6"},children:"keyof"})," ",(0,t.jsx)("span",{style:{color:"#8ae9fd"},children:e})]}),i=({children:e})=>(0,t.jsxs)("span",{children:[(0,t.jsx)("span",{style:{color:"#8ae9fd"},children:"Array"}),"<",e,">"]}),a=({children:e})=>(0,t.jsx)("span",{style:{color:"#8ae9fd"},children:e}),o=({children:e})=>(0,t.jsxs)("span",{children:[e,(0,t.jsx)("span",{className:"required-indicator",children:(0,t.jsx)(r.A,{id:"requiredIndicator",description:"Indicate that a field is required",children:"required"})})]}),l=({children:e})=>(0,t.jsx)("span",{className:"highlight",children:e})},5591:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"dml/insert","title":"Insert","description":"A fun\xe7\xe3o insert permite executar uma instru\xe7\xe3o INSERT e retornar um objeto contendo o status da opera\xe7\xe3o, uma mensagem e alguns detalhes.","source":"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/dml/insert.mdx","sourceDirName":"dml","slug":"/dml/insert","permalink":"/node-pyodbc-docs/pt-BR/docs/dml/insert","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"insert"},"sidebar":"tutorialSidebar","previous":{"title":"Select","permalink":"/node-pyodbc-docs/pt-BR/docs/dml/select"},"next":{"title":"Delete","permalink":"/node-pyodbc-docs/pt-BR/docs/dml/delete"}}');var t=s(4848),d=s(8453),i=s(862);const a={sidebar_position:2,id:"insert"},o="Insert",l={},c=[{value:"Exemplo",id:"exemplo",level:2},{value:"Par\xe2metros",id:"par\xe2metros",level:2},{value:"database",id:"database",level:3},{value:"<RequiredIndicator>table</RequiredIndicator>",id:"table",level:3},{value:"<RequiredIndicator>data</RequiredIndicator>",id:"data",level:3},{value:"replace",id:"replace",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"insert",children:"Insert"})}),"\n",(0,t.jsx)(n.p,{children:"A fun\xe7\xe3o insert permite executar uma instru\xe7\xe3o INSERT e retornar um objeto contendo o status da opera\xe7\xe3o, uma mensagem e alguns detalhes."}),"\n",(0,t.jsx)(n.p,{children:"A aceita o tipo da tabela principal."}),"\n",(0,t.jsx)(n.admonition,{title:"Inserindo m\xfaltiplas linhas",type:"tip",children:(0,t.jsxs)(n.p,{children:["Se voc\xea quiser inserir m\xfaltiplas linhas, use a fun\xe7\xe3o ",(0,t.jsx)(n.a,{href:"./insertMultiple",children:"insertMultiple"})," em vez disso."]})}),"\n",(0,t.jsx)(n.h2,{id:"exemplo",children:"Exemplo"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { odbc } from "./odbc";\nimport { TUsuarios } from "./types";\n\nconst insert = await odbc.insert<TUsuarios>({\n  table: "usuarios",\n  data: {\n    name: "Z\xe9 Ningu\xe9m",\n    email: "ze.ninguem@gmail.com",\n    age: 19,\n  },\n});\n\nconsole.log(insert);\n/*\n{\n  code: SUCCESS,\n  message: "Successfully executed query: INSERT INTO usuarios(name, email, age) VALUES (\'Z\xe9 Ningu\xe9m\', \'ze.ninguem@gmail.com\', 19);",\n  details: "1  row(s) affected",\n}\n*/\n'})}),"\n",(0,t.jsx)(n.h2,{id:"par\xe2metros",children:"Par\xe2metros"}),"\n",(0,t.jsx)(n.h3,{id:"database",children:"database"}),"\n",(0,t.jsx)(n.p,{children:"O nome do banco de dados a ser utilizado. Caso esse banco j\xe1 tenha sido definido no objeto de configura\xe7\xe3o expl\xedcito, este par\xe2metro pode ser omitido."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Tipo"}),(0,t.jsx)(n.th,{children:"Padr\xe3o"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Database do client"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"table",children:(0,t.jsx)(i.Tr,{children:"table"})}),"\n",(0,t.jsx)(n.p,{children:"O nome da tabela a ser consultada."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Tipo"})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:"string"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"data",children:(0,t.jsx)(i.Tr,{children:"data"})}),"\n",(0,t.jsx)(n.p,{children:"Os dados a serem inseridos. Caso um tipo seja informado, o IntelliSense fornecer\xe1 sugest\xf5es com os nomes das colunas."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.th,{children:"Tipo"})})}),(0,t.jsx)(n.tbody,{children:(0,t.jsx)(n.tr,{children:(0,t.jsx)(n.td,{children:(0,t.jsx)(i.Mb,{children:"Object"})})})})]}),"\n",(0,t.jsx)(n.h3,{id:"replace",children:"replace"}),"\n",(0,t.jsx)(n.p,{children:"Um valor booleano que indica se os dados existentes na tabela devem ser substitu\xeddos."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Tipo"}),(0,t.jsx)(n.th,{children:"Padr\xe3o"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"false"})]})})]})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(6540);const t={},d=r.createContext(t);function i(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);